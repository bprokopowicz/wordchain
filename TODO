Known Bugs
==========

- Hard reload shows 'You Win!' toast even though the daily game is unplayed or unfinished.

- If Daily game is in progress and we redefine the start/target words for that game
  number in a prod update, it screws up any game in progress or finished that started
  with the previous definition.

Near Term Changes
=================

Do in suggested order?

- Help video
- Add "set your variables" to the Testing page
- Analytics
- Refactor some things:
- Add remaining penalties indication (maybe in the header?)

Maybe Someday
=============

Affecting Game Play
-------------------
- Another hint approach:
  - When you are changing a letter, letters in the picker that don't form valid
    words (according to either dictionary) would become unselectable.
  - When you are adding a letter, "+" buttons where there are no valid words
    (according to the "common words" dictionary) would become unselectable.
  - When you are deleting a letter, "-" buttons where the result is an invalid
    word would become unselectable.
- Mode where future rows do not have change cells outlined thicker. (harder)
- Allow "overriding" WordChain's suggested next move type (including which letter to change).

Not Affecting Game Play
-----------------------
- Create a back-end that delivers the daily and practice games
- Cookies: make secure? Obfuscate? Save in back-end DB?
- Remove words from dictionary if they have no neighbors.
- Address slow handler violations:
     [Violation] 'click' handler took XXXms
        (can happen when switching to Practice game or starting new Practice game)
     [Violation] 'setInterval' handler took XXXms
        (can happen when the AppDisplay interval timer determines it's time for a new Daily game)

Testing Issues
==============

Coverage.js uses a static map to hold counters for each place that COV is called.  But the static map is
initialized twice - it seems to be a separate copy - in the case of App tests, which are executed "in the future" 
using setTimeout().  It could be that the Coverage class is loaded twice, once when code is loaded, and again when
the AppTest runs using the scheduler.  The second instance isn't printed out by Coverage.showResults().

In IOS (phone, ipad) using Safari, wordchain.html will load and play OK, BUT:
- if you force a hard reload (cmd-opt-R) from the web inspector while tethered to a Mac,
  the javascript downloading fails for 2-4 of the files.
- also, BaseLogger.js seems to take too long but does download. You can see this in the Web
  Inspector on the Mac when tethered to the iPad. We haven't tethered a phone yet (Nov 8, 2024)
- only occurs when device is tethered

TODO - verify that hard reload doesn't work on iphone/safari (untethered).
TODO - can we force hard-reload on iphone/ipad in Chrome? Does that require tethering?
    NOTE: If we clear the Safari's cache on iPad via Settings --> Safari --> Clear History and Website Data
          and then go back to Safari, the app seems to reload everything just fine (tethered or not).

The JS download failure has strange aspects.
- Web Inspector/network shows that 2-4 JS files never load.
  - They are in the green "waiting" phase, but if you look at the "Headers" tab in WebInspector,
    you will see there are no requests made for those pages.
  - And the web server doesn't show any request.
